// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mls_client.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.github.traderjoe95.mls.interop.proto;

@kotlin.jvm.JvmName("-initializeextension")
public inline fun extension(block: com.github.traderjoe95.mls.interop.proto.ExtensionKt.Dsl.() -> kotlin.Unit): com.github.traderjoe95.mls.interop.proto.Extension =
  com.github.traderjoe95.mls.interop.proto.ExtensionKt.Dsl._create(com.github.traderjoe95.mls.interop.proto.Extension.newBuilder()).apply { block() }._build()
/**
 * ```
 * rpc GroupContextExtensionsProposal
 * ```
 *
 * Protobuf type `mls_client.Extension`
 */
public object ExtensionKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.github.traderjoe95.mls.interop.proto.Extension.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.github.traderjoe95.mls.interop.proto.Extension.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.github.traderjoe95.mls.interop.proto.Extension = _builder.build()

    /**
     * `uint32 extension_type = 1;`
     */
    public var extensionType: kotlin.Int
      @JvmName("getExtensionType")
      get() = _builder.getExtensionType()
      @JvmName("setExtensionType")
      set(value) {
        _builder.setExtensionType(value)
      }
    /**
     * `uint32 extension_type = 1;`
     */
    public fun clearExtensionType() {
      _builder.clearExtensionType()
    }

    /**
     * `bytes extension_data = 2;`
     */
    public var extensionData: com.google.protobuf.ByteString
      @JvmName("getExtensionData")
      get() = _builder.getExtensionData()
      @JvmName("setExtensionData")
      set(value) {
        _builder.setExtensionData(value)
      }
    /**
     * `bytes extension_data = 2;`
     */
    public fun clearExtensionData() {
      _builder.clearExtensionData()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.github.traderjoe95.mls.interop.proto.Extension.copy(block: `com.github.traderjoe95.mls.interop.proto`.ExtensionKt.Dsl.() -> kotlin.Unit): com.github.traderjoe95.mls.interop.proto.Extension =
  `com.github.traderjoe95.mls.interop.proto`.ExtensionKt.Dsl._create(this.toBuilder()).apply { block() }._build()

