// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mls_client.proto

// Protobuf Java Version: 3.25.3
package com.github.traderjoe95.mls.interop.proto;

/**
 * <pre>
 * rpc HandleCommit
 * </pre>
 *
 * Protobuf type {@code mls_client.HandleCommitRequest}
 */
public final class HandleCommitRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:mls_client.HandleCommitRequest)
    HandleCommitRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use HandleCommitRequest.newBuilder() to construct.
  private HandleCommitRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private HandleCommitRequest() {
    proposal_ = emptyList(com.google.protobuf.ByteString.class);
    commit_ = com.google.protobuf.ByteString.EMPTY;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new HandleCommitRequest();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.github.traderjoe95.mls.interop.proto.MlsClientProto.internal_static_mls_client_HandleCommitRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.github.traderjoe95.mls.interop.proto.MlsClientProto.internal_static_mls_client_HandleCommitRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.github.traderjoe95.mls.interop.proto.HandleCommitRequest.class, com.github.traderjoe95.mls.interop.proto.HandleCommitRequest.Builder.class);
  }

  public static final int STATE_ID_FIELD_NUMBER = 1;
  private int stateId_ = 0;
  /**
   * <code>uint32 state_id = 1;</code>
   * @return The stateId.
   */
  @java.lang.Override
  public int getStateId() {
    return stateId_;
  }

  public static final int PROPOSAL_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.ByteString> proposal_ =
      emptyList(com.google.protobuf.ByteString.class);
  /**
   * <code>repeated bytes proposal = 2;</code>
   * @return A list containing the proposal.
   */
  @java.lang.Override
  public java.util.List<com.google.protobuf.ByteString>
      getProposalList() {
    return proposal_;
  }
  /**
   * <code>repeated bytes proposal = 2;</code>
   * @return The count of proposal.
   */
  public int getProposalCount() {
    return proposal_.size();
  }
  /**
   * <code>repeated bytes proposal = 2;</code>
   * @param index The index of the element to return.
   * @return The proposal at the given index.
   */
  public com.google.protobuf.ByteString getProposal(int index) {
    return proposal_.get(index);
  }

  public static final int COMMIT_FIELD_NUMBER = 3;
  private com.google.protobuf.ByteString commit_ = com.google.protobuf.ByteString.EMPTY;
  /**
   * <code>bytes commit = 3;</code>
   * @return The commit.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getCommit() {
    return commit_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (stateId_ != 0) {
      output.writeUInt32(1, stateId_);
    }
    for (int i = 0; i < proposal_.size(); i++) {
      output.writeBytes(2, proposal_.get(i));
    }
    if (!commit_.isEmpty()) {
      output.writeBytes(3, commit_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (stateId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(1, stateId_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < proposal_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeBytesSizeNoTag(proposal_.get(i));
      }
      size += dataSize;
      size += 1 * getProposalList().size();
    }
    if (!commit_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(3, commit_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.github.traderjoe95.mls.interop.proto.HandleCommitRequest)) {
      return super.equals(obj);
    }
    com.github.traderjoe95.mls.interop.proto.HandleCommitRequest other = (com.github.traderjoe95.mls.interop.proto.HandleCommitRequest) obj;

    if (getStateId()
        != other.getStateId()) return false;
    if (!getProposalList()
        .equals(other.getProposalList())) return false;
    if (!getCommit()
        .equals(other.getCommit())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + STATE_ID_FIELD_NUMBER;
    hash = (53 * hash) + getStateId();
    if (getProposalCount() > 0) {
      hash = (37 * hash) + PROPOSAL_FIELD_NUMBER;
      hash = (53 * hash) + getProposalList().hashCode();
    }
    hash = (37 * hash) + COMMIT_FIELD_NUMBER;
    hash = (53 * hash) + getCommit().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.github.traderjoe95.mls.interop.proto.HandleCommitRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.traderjoe95.mls.interop.proto.HandleCommitRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.traderjoe95.mls.interop.proto.HandleCommitRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.traderjoe95.mls.interop.proto.HandleCommitRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.traderjoe95.mls.interop.proto.HandleCommitRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.traderjoe95.mls.interop.proto.HandleCommitRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.traderjoe95.mls.interop.proto.HandleCommitRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.github.traderjoe95.mls.interop.proto.HandleCommitRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.github.traderjoe95.mls.interop.proto.HandleCommitRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.github.traderjoe95.mls.interop.proto.HandleCommitRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.github.traderjoe95.mls.interop.proto.HandleCommitRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.github.traderjoe95.mls.interop.proto.HandleCommitRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.github.traderjoe95.mls.interop.proto.HandleCommitRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * rpc HandleCommit
   * </pre>
   *
   * Protobuf type {@code mls_client.HandleCommitRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:mls_client.HandleCommitRequest)
      com.github.traderjoe95.mls.interop.proto.HandleCommitRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.traderjoe95.mls.interop.proto.MlsClientProto.internal_static_mls_client_HandleCommitRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.traderjoe95.mls.interop.proto.MlsClientProto.internal_static_mls_client_HandleCommitRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.traderjoe95.mls.interop.proto.HandleCommitRequest.class, com.github.traderjoe95.mls.interop.proto.HandleCommitRequest.Builder.class);
    }

    // Construct using com.github.traderjoe95.mls.interop.proto.HandleCommitRequest.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      stateId_ = 0;
      proposal_ = emptyList(com.google.protobuf.ByteString.class);
      commit_ = com.google.protobuf.ByteString.EMPTY;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.github.traderjoe95.mls.interop.proto.MlsClientProto.internal_static_mls_client_HandleCommitRequest_descriptor;
    }

    @java.lang.Override
    public com.github.traderjoe95.mls.interop.proto.HandleCommitRequest getDefaultInstanceForType() {
      return com.github.traderjoe95.mls.interop.proto.HandleCommitRequest.getDefaultInstance();
    }

    @java.lang.Override
    public com.github.traderjoe95.mls.interop.proto.HandleCommitRequest build() {
      com.github.traderjoe95.mls.interop.proto.HandleCommitRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.github.traderjoe95.mls.interop.proto.HandleCommitRequest buildPartial() {
      com.github.traderjoe95.mls.interop.proto.HandleCommitRequest result = new com.github.traderjoe95.mls.interop.proto.HandleCommitRequest(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.github.traderjoe95.mls.interop.proto.HandleCommitRequest result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.stateId_ = stateId_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        proposal_.makeImmutable();
        result.proposal_ = proposal_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.commit_ = commit_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.github.traderjoe95.mls.interop.proto.HandleCommitRequest) {
        return mergeFrom((com.github.traderjoe95.mls.interop.proto.HandleCommitRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.github.traderjoe95.mls.interop.proto.HandleCommitRequest other) {
      if (other == com.github.traderjoe95.mls.interop.proto.HandleCommitRequest.getDefaultInstance()) return this;
      if (other.getStateId() != 0) {
        setStateId(other.getStateId());
      }
      if (!other.proposal_.isEmpty()) {
        if (proposal_.isEmpty()) {
          proposal_ = other.proposal_;
          proposal_.makeImmutable();
          bitField0_ |= 0x00000002;
        } else {
          ensureProposalIsMutable();
          proposal_.addAll(other.proposal_);
        }
        onChanged();
      }
      if (other.getCommit() != com.google.protobuf.ByteString.EMPTY) {
        setCommit(other.getCommit());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              stateId_ = input.readUInt32();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 18: {
              com.google.protobuf.ByteString v = input.readBytes();
              ensureProposalIsMutable();
              proposal_.add(v);
              break;
            } // case 18
            case 26: {
              commit_ = input.readBytes();
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int stateId_ ;
    /**
     * <code>uint32 state_id = 1;</code>
     * @return The stateId.
     */
    @java.lang.Override
    public int getStateId() {
      return stateId_;
    }
    /**
     * <code>uint32 state_id = 1;</code>
     * @param value The stateId to set.
     * @return This builder for chaining.
     */
    public Builder setStateId(int value) {

      stateId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 state_id = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearStateId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      stateId_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.ByteString> proposal_ = emptyList(com.google.protobuf.ByteString.class);
    private void ensureProposalIsMutable() {
      if (!proposal_.isModifiable()) {
        proposal_ = makeMutableCopy(proposal_);
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>repeated bytes proposal = 2;</code>
     * @return A list containing the proposal.
     */
    public java.util.List<com.google.protobuf.ByteString>
        getProposalList() {
      proposal_.makeImmutable();
      return proposal_;
    }
    /**
     * <code>repeated bytes proposal = 2;</code>
     * @return The count of proposal.
     */
    public int getProposalCount() {
      return proposal_.size();
    }
    /**
     * <code>repeated bytes proposal = 2;</code>
     * @param index The index of the element to return.
     * @return The proposal at the given index.
     */
    public com.google.protobuf.ByteString getProposal(int index) {
      return proposal_.get(index);
    }
    /**
     * <code>repeated bytes proposal = 2;</code>
     * @param index The index to set the value at.
     * @param value The proposal to set.
     * @return This builder for chaining.
     */
    public Builder setProposal(
        int index, com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      ensureProposalIsMutable();
      proposal_.set(index, value);
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>repeated bytes proposal = 2;</code>
     * @param value The proposal to add.
     * @return This builder for chaining.
     */
    public Builder addProposal(com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      ensureProposalIsMutable();
      proposal_.add(value);
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>repeated bytes proposal = 2;</code>
     * @param values The proposal to add.
     * @return This builder for chaining.
     */
    public Builder addAllProposal(
        java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
      ensureProposalIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, proposal_);
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>repeated bytes proposal = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearProposal() {
      proposal_ = emptyList(com.google.protobuf.ByteString.class);
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString commit_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>bytes commit = 3;</code>
     * @return The commit.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getCommit() {
      return commit_;
    }
    /**
     * <code>bytes commit = 3;</code>
     * @param value The commit to set.
     * @return This builder for chaining.
     */
    public Builder setCommit(com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      commit_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>bytes commit = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearCommit() {
      bitField0_ = (bitField0_ & ~0x00000004);
      commit_ = getDefaultInstance().getCommit();
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:mls_client.HandleCommitRequest)
  }

  // @@protoc_insertion_point(class_scope:mls_client.HandleCommitRequest)
  private static final com.github.traderjoe95.mls.interop.proto.HandleCommitRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.github.traderjoe95.mls.interop.proto.HandleCommitRequest();
  }

  public static com.github.traderjoe95.mls.interop.proto.HandleCommitRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<HandleCommitRequest>
      PARSER = new com.google.protobuf.AbstractParser<HandleCommitRequest>() {
    @java.lang.Override
    public HandleCommitRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<HandleCommitRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<HandleCommitRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.github.traderjoe95.mls.interop.proto.HandleCommitRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

